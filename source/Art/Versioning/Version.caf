import &ArtStandardLib

class Version extends &ArtClassSystem.BaseClass

  ##
    IN: npm-version-string
    OR: major, minor, patch (numbers)
    OR: object-or-Version-instance: {major, minor, patch}
  constructor: (a, b, c) ->
    super
    @major = @minor = @patch = 0
    if isString a
      @_parse a

    else if isNumber a
      @major = a | 0
      @minor = b | 0
      @patch = c | 0

    else if (a instanceof Version) || isPlainObject a
      @major = a.major | 0
      @minor = a.minor | 0
      @patch = a.patch | 0

  toString: -> @combine()

  @getter
    inspectedObjects: ->
      major: @major
      minor: @minor
      patch: @patch

  combine: (dev) ->
    if dev
      compactFlatten []
        @major
        "+" + dev.major if dev.major
        "."
        @minor
        "+" + dev.minor if dev.minor
        "."
        @patch
        "+" + dev.patch if dev.patch
      .join ''
    else
      "#{@major}.#{@minor}.#{@patch}"

  bump: (dev) ->
    if dev
      {major, minor, patch} = dev
      if      major > 0 then new Version @major + 1
      else if minor > 0 then new Version @major, @minor + 1
      else if patch > 0 then @bump()
      else @
    else
      new Version @major, @minor, @patch + 1

  # PRIVATE
  _parse: (version) ->
    [major, minor, patch] = version.split "."
    @major = major | 0
    @minor = minor | 0
    @patch = patch | 0
