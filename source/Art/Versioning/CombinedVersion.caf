import &ArtStandardLib
&Version

class CombinedVersion extends &ArtClassSystem.BaseClass

  constructor: (a, b) ->
    super
    @_release = @_development = null
    if isString a
      @_release     = new Version a
      @_development = new Version b
    else if isPlainObject a
      @_release     = new Version a.release
      @_development = new Version a.development

  toString: -> @combined

  @getter
    :release
    :development
    version:            -> @release.toString()
    combined:           -> @release.combine @development
    nextReleaseVersion: -> @release.bump @development

    released: ->
      new CombinedVersion
        release: @nextReleaseVersion
        development: new Version

    majorBump: -> @bump major: 1
    minorBump: -> @bump minor: 1
    patchBump: -> @bump patch: 1

    inspectedObjects: -> toInspectedObjects
      release:      @release
      development:  @development
      version:      @version
      combined:     @combined

  bump: (bumpMap) ->
    new CombinedVersion
      release: @release
      development: @development.bump bumpMap
